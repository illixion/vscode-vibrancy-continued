name: Build Vibrancy Continued

on:
  push:
    branches:
      - main
      - development
      - gh-actions-testing
  pull_request:
    branches:
      - main
      - development

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-11-arm, windows-2025]
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install node-gyp
        run: |
          npm install -g node-gyp

      - name: Rename binding.gyp.dist to binding.gyp
        run: mv binding.gyp.dist binding.gyp
        shell: bash

      - name: Clear prebuilt directory
        shell: bash
        run: |
          rm -rf native/prebuilt || true
          mkdir -p native/prebuilt

      - name: Install dependencies
        run: npm install

      - name: Rename .node files with architecture suffix
        run: |
          ARCH_SUFFIX="${{ matrix.os }}"
          if [[ "$ARCH_SUFFIX" == "windows-11-arm" ]]; then
            ARCH_SUFFIX="arm64"
          else
            ARCH_SUFFIX="x64"
          fi
          for f in build/Release/*.node; do
            base=$(basename "$f" .node)
            mv "$f" "native/prebuilt/${base}-${ARCH_SUFFIX}.node"
          done
        shell: bash

      - name: Archive build output
        if: success()
        uses: actions/upload-artifact@v4
        with:
          name: build-output-${{ matrix.os }}-20.x
          path: |
            native/prebuilt/

  merge-and-package-vsix:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20.x

      - name: Install dependencies
        run: npm install --omit=dev

      - name: Clear prebuilt directory
        shell: bash
        run: |
          rm -rf native/prebuilt || true
          mkdir -p native/prebuilt

      - name: Download all build-output artifacts
        uses: actions/download-artifact@v4
        with:
          path: combined-prebuilt
          pattern: build-output-*

      - name: List downloaded files
        run: ls -R combined-prebuilt

      - name: Combine all .node files into native/prebuilt
        run: |
          mkdir -p native/prebuilt
          find combined-prebuilt -name '*.node' -exec cp {} native/prebuilt/ \;

      - name: Remove temp combined-prebuilt directory
        run: rm -rf combined-prebuilt

      - name: Set version to current commit SHA 
        run: npm version ${{ github.sha }}

      - name: Package extension
        run: npx @vscode/vsce package

      - name: Upload VSIX package as artifact
        uses: actions/upload-artifact@v4
        with:
          name: vscode-vibrancy-continued-${{ github.sha }}
          path: "*.vsix"
      - name: Output workflow run ID
        run: echo "::notice::Done, your build workflow run ID is ${{ github.run_id }}"
